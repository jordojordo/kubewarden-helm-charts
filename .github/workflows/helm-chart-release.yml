name: Release policy charts

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - rancher-policies

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          install_only: true

      - name: Release policy charts
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}
        run: |
          set -ex
          
          OWNER="${{ github.repository_owner }}"
          REPO="kubewarden-helm-charts"
          PACKAGE_PATH=".cr-release-packages"

          # Clean up from any previous runs
          rm -rf "${PACKAGE_PATH}"
          mkdir -p "${PACKAGE_PATH}"

          # Loop over each sub-directory in ./charts/policies (one level)
          for chart_dir in $(find ./charts/policies -maxdepth 1 -mindepth 1 -type d); do
            chart_name=$(basename "${chart_dir}")

            # Package the chart into .tgz
            cr package "${chart_dir}" \
               --package-path "${PACKAGE_PATH}"

            # Grab the .tgz that was just created
            chart_tgz=$(ls "${PACKAGE_PATH}/${chart_name}-"*.tgz | head -n1)
            # Extract the version from the chart package
            chart_version=$(helm show chart "${chart_tgz}" | yq -r '.version')

            # Check if this version is already released
            if gh --repo "${OWNER}/${REPO}" release view "${chart_name}-${chart_version}" > /dev/null 2>&1; then
              echo "Chart ${chart_name}-${chart_version} already released. Skipping."
              rm -f "${chart_tgz}"
            fi
          done

          # If we still have any .tgz files in .cr-release-packages, upload them
          if [ -n "$(ls -A ${PACKAGE_PATH} 2>/dev/null)" ]; then
            # Upload to GitHub Releases
            cr upload \
              -o "${OWNER}" \
              -r "${REPO}" \
              -c "$(git rev-parse HEAD)" \
              --pages-branch gh-pages \
              --make-release-latest=false \
              --token "${GH_TOKEN}" \
              --push
            echo "Policy charts released!"

            # Regenerate the Helm index.yaml
            cr index \
              -o "${OWNER}" \
              -r "${REPO}" \
              --pages-branch gh-pages \
              --push \
              --token "${GH_TOKEN}" \
              --index-path .
            echo "Repository index updated!"
          else
            echo "No new policy charts to release."
          fi
